# Generated by Django 5.0.6 on 2025-05-21 17:43

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('language', models.CharField(choices=[('ru', 'Russian'), ('kz', 'Kazakh'), ('en', 'English')], default='ru', max_length=2)),
                ('timezone', models.CharField(choices=[('UTC', 'UTC'), ('Asia/Almaty', 'Asia/Almaty'), ('Europe/Moscow', 'Europe/Moscow'), ('Asia/Tokyo', 'Asia/Tokyo'), ('America/New_York', 'America/New_York'), ('America/Los_Angeles', 'America/Los_Angeles')], default='Asia/Almaty', max_length=50)),
                ('monday_hours', models.CharField(default='9:00-21:00', max_length=20)),
                ('tuesday_hours', models.CharField(default='9:00-21:00', max_length=20)),
                ('wednesday_hours', models.CharField(default='9:00-21:00', max_length=20)),
                ('thursday_hours', models.CharField(default='9:00-21:00', max_length=20)),
                ('friday_hours', models.CharField(default='9:00-21:00', max_length=20)),
                ('saturday_hours', models.CharField(default='9:00-21:00', max_length=20)),
                ('sunday_hours', models.CharField(default='9:00-21:00', max_length=20)),
                ('welcome_message', models.TextField(blank=True, null=True)),
                ('fallback_message', models.TextField(blank=True, null=True)),
                ('handoff_message', models.TextField(blank=True, null=True)),
                ('off_hours_message', models.TextField(blank=True, null=True)),
                ('thanks_message', models.TextField(blank=True, null=True)),
                ('response_delay', models.PositiveIntegerField(default=2)),
                ('typing_duration', models.PositiveIntegerField(default=3)),
                ('max_retries', models.PositiveIntegerField(default=3)),
                ('enable_analytics', models.BooleanField(default=True)),
                ('collect_feedback', models.BooleanField(default=True)),
                ('available_languages', models.JSONField(default=list)),
                ('allowed_topics', models.JSONField(default=list)),
                ('restricted_topics', models.JSONField(default=list)),
                ('admin_id', models.CharField(blank=True, max_length=50, null=True)),
                ('notifications_enabled', models.BooleanField(default=True)),
                ('notification_hours', models.JSONField(default=list)),
                ('email_notifications', models.BooleanField(default=True)),
                ('admin_email', models.EmailField(blank=True, max_length=254, null=True)),
            ],
            options={
                'verbose_name': 'company',
                'verbose_name_plural': 'companies',
            },
        ),
        migrations.CreateModel(
            name='CompanyAdmin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('position', models.CharField(blank=True, max_length=100, null=True)),
                ('department', models.CharField(blank=True, max_length=100, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pics/')),
                ('linkedin', models.URLField(blank=True, null=True)),
                ('twitter', models.URLField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clients', to='users.company')),
            ],
            options={
                'verbose_name': 'client',
                'verbose_name_plural': 'clients',
                'unique_together': {('company', 'email')},
            },
        ),
    ]
